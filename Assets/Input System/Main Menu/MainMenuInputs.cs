//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input System/Main Menu/MainMenuInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MainMenuInputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MainMenuInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MainMenuInputs"",
    ""maps"": [
        {
            ""name"": ""Main Screen"",
            ""id"": ""2e102ff0-e41f-4d97-86a2-0075046fe664"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6eb1ea7e-c901-4118-885d-c38c9f400dc2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""83508582-bfae-462a-8d2a-3e4acc913bd8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Exit Game"",
                    ""type"": ""Button"",
                    ""id"": ""e7414637-07c0-4493-9bb7-74d08c236905"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""937ddbc2-e5c9-49dd-8a64-c894921910f6"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a3b244d4-1c52-4dd6-92d4-77b0ff12da93"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4af464b9-4605-411e-9bcd-0120ef35effd"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""67724e02-e07c-4727-bef8-01bdd7a2b22e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5e34bd86-f20d-4100-9bbe-fe7fa1129469"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2bf3c041-c0c4-4166-8d4b-b7de46d5bb11"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""D-Pad"",
                    ""id"": ""a95ed6be-b130-46b2-b772-97b342b8c5ec"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""637233cc-cdf2-46e4-80f2-a0408cc0549c"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""eb80bc7f-2719-4e5a-a24f-36f9ebf0aa8c"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5e97f7cc-b708-4420-b942-20c6a9c4de7f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1aeba62-9e51-47c4-af05-4d5edb667746"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c83482ca-ea71-410a-98f0-3f9fd285f557"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""faf39c26-c6f6-4bc3-b990-8f97bd7b73af"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Exit Game"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""acb99198-f9ca-4be2-89ab-f59139ec216d"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Exit Game"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fba9ca9b-e55e-44ad-bf29-3123814d1519"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Exit Game"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Settings Screen"",
            ""id"": ""4e7fe1a3-c2f8-46b5-9220-be411712a6ad"",
            ""actions"": [
                {
                    ""name"": ""Navigate Settings Subsections"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8723bc3a-20da-421c-ab8a-ceae14aa5017"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""16106e92-792e-4e1b-be6a-5b823ff9013a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Change Setting Value"",
                    ""type"": ""PassThrough"",
                    ""id"": ""db2023e1-d55c-4528-97b4-2c9b6c1c0447"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Save Settings"",
                    ""type"": ""Button"",
                    ""id"": ""2aef473f-2f41-4a90-9081-1f5e5aa7e5aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Return"",
                    ""type"": ""Button"",
                    ""id"": ""bc55be25-10ff-43d4-9fdb-a0c221ce901b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Q/E"",
                    ""id"": ""dab894c5-2895-4f31-b513-376479206e04"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate Settings Subsections"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""de33387c-8a75-43f4-bfb0-b106d34b5344"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Navigate Settings Subsections"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8608afca-60f9-4dfd-9751-4ae6045664eb"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Navigate Settings Subsections"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""LB/RB"",
                    ""id"": ""856a6408-1bbb-4d98-af9c-00de60888028"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate Settings Subsections"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fb54a217-c034-4c4a-9184-45a9c42af63a"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate Settings Subsections"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""71bcb3fa-1877-4411-9278-8180dd449f8e"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate Settings Subsections"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""W/S"",
                    ""id"": ""70dcb03b-1c24-4a44-ad18-f59382b09f29"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""aaf17d77-15fd-4d81-8169-fee12ba7f1ab"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""25777d31-9d69-4f12-b639-92d1b4b662ba"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""f97b0698-1c7c-498e-9617-5fc767b8a827"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a6417092-d39c-41e0-99e6-c95f274f21ee"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""50fd4725-9cb5-46b8-abcd-35b6ecd8fddb"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""D-Pad"",
                    ""id"": ""c98886c4-3104-4a49-b7c2-cd8b523e11be"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""73f0d5da-7c58-4134-9d52-51d3f43b7438"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""92cc54a0-19aa-4c4e-8e9d-5501cc34052e"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""A/D"",
                    ""id"": ""af483110-e5a7-4b67-a513-ebda2d53e2b0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Setting Value"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""aafb2b21-2500-424a-93e3-168868c2af0d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Change Setting Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""01048fa8-c4cc-4d1d-9515-89bf74f39ae8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Change Setting Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""0a254b6d-d2ad-4034-8f63-b1e4f843c916"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Setting Value"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""fad53699-7b34-40eb-abbb-b051ee4d87e7"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Change Setting Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2f0a5946-de01-4a31-995d-a3bb9e222623"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Change Setting Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""D-Pad"",
                    ""id"": ""b2a450a7-1dc1-4159-b424-d5a43628134a"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Setting Value"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1e86c711-ddff-4ad7-b517-c8ed9ef8087c"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Change Setting Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""13024037-5da3-4592-a9d8-5fa417646cd9"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Change Setting Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d6e80520-1dcd-4625-bbbe-489dadd62491"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a670a3fc-eba0-4f1b-91a1-02fe93fe8676"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2a55d31-5d3d-48df-944b-10c1e756de2a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Save Settings"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d30017b-cf0e-4604-babe-a814bd518ace"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Save Settings"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Settings Screen (Graphics)"",
            ""id"": ""e521fa52-1c79-4bb8-ab7a-3f9c34b47865"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""aca81a77-c95e-4b38-8bae-4beb8600eadb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bafd2104-741e-4bee-8e34-edd4143e17bc"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Settings Screen (Sounds)"",
            ""id"": ""89b788d4-8d3e-4046-b75d-6674137b5583"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""b7d0b90f-e849-4ee4-a54a-ec71f570bfa2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0e576cdd-1e5b-4ee1-bd14-78a373b16fe3"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Settings Screen (Controls)"",
            ""id"": ""a55a315b-f870-43b4-8a86-837bf2f28cdc"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""7fe57616-0f70-4eb0-8a7f-9be8b0c59c2e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f309a25c-d906-43e3-b672-342d8d6cc8bf"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Credits Screen"",
            ""id"": ""01929c74-ae40-4622-8d69-0dfcdfb78ee2"",
            ""actions"": [
                {
                    ""name"": ""Return"",
                    ""type"": ""Button"",
                    ""id"": ""45335e54-92a1-4aae-8f15-832353f1eaa2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1c1cc596-94cc-49ea-9754-c53400939491"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a643bfa6-467f-489a-80d8-b5e35e6c43a4"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Warning Window"",
            ""id"": ""74b47e55-1fe2-4b9b-97ca-40dbbacc8c84"",
            ""actions"": [
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""ec0bfc20-7dd0-4d8b-a868-eff3ed640a15"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Return"",
                    ""type"": ""Button"",
                    ""id"": ""45c052ce-e6ec-4e36-ab4c-001c481c8564"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""184cd0e8-e034-464e-9909-0ee94c2e0435"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2842cca4-026f-4545-91fb-16309b41b610"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3db0f8c1-7193-47ef-8bb7-a470c4b410af"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57ab3a8d-34bb-467e-a18a-14c3354c719d"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""MouseKeyboard"",
            ""bindingGroup"": ""MouseKeyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Main Screen
        m_MainScreen = asset.FindActionMap("Main Screen", throwIfNotFound: true);
        m_MainScreen_Navigate = m_MainScreen.FindAction("Navigate", throwIfNotFound: true);
        m_MainScreen_Select = m_MainScreen.FindAction("Select", throwIfNotFound: true);
        m_MainScreen_ExitGame = m_MainScreen.FindAction("Exit Game", throwIfNotFound: true);
        // Settings Screen
        m_SettingsScreen = asset.FindActionMap("Settings Screen", throwIfNotFound: true);
        m_SettingsScreen_NavigateSettingsSubsections = m_SettingsScreen.FindAction("Navigate Settings Subsections", throwIfNotFound: true);
        m_SettingsScreen_Navigate = m_SettingsScreen.FindAction("Navigate", throwIfNotFound: true);
        m_SettingsScreen_ChangeSettingValue = m_SettingsScreen.FindAction("Change Setting Value", throwIfNotFound: true);
        m_SettingsScreen_SaveSettings = m_SettingsScreen.FindAction("Save Settings", throwIfNotFound: true);
        m_SettingsScreen_Return = m_SettingsScreen.FindAction("Return", throwIfNotFound: true);
        // Settings Screen (Graphics)
        m_SettingsScreenGraphics = asset.FindActionMap("Settings Screen (Graphics)", throwIfNotFound: true);
        m_SettingsScreenGraphics_Newaction = m_SettingsScreenGraphics.FindAction("New action", throwIfNotFound: true);
        // Settings Screen (Sounds)
        m_SettingsScreenSounds = asset.FindActionMap("Settings Screen (Sounds)", throwIfNotFound: true);
        m_SettingsScreenSounds_Newaction = m_SettingsScreenSounds.FindAction("New action", throwIfNotFound: true);
        // Settings Screen (Controls)
        m_SettingsScreenControls = asset.FindActionMap("Settings Screen (Controls)", throwIfNotFound: true);
        m_SettingsScreenControls_Newaction = m_SettingsScreenControls.FindAction("New action", throwIfNotFound: true);
        // Credits Screen
        m_CreditsScreen = asset.FindActionMap("Credits Screen", throwIfNotFound: true);
        m_CreditsScreen_Return = m_CreditsScreen.FindAction("Return", throwIfNotFound: true);
        // Warning Window
        m_WarningWindow = asset.FindActionMap("Warning Window", throwIfNotFound: true);
        m_WarningWindow_Confirm = m_WarningWindow.FindAction("Confirm", throwIfNotFound: true);
        m_WarningWindow_Return = m_WarningWindow.FindAction("Return", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Main Screen
    private readonly InputActionMap m_MainScreen;
    private IMainScreenActions m_MainScreenActionsCallbackInterface;
    private readonly InputAction m_MainScreen_Navigate;
    private readonly InputAction m_MainScreen_Select;
    private readonly InputAction m_MainScreen_ExitGame;
    public struct MainScreenActions
    {
        private @MainMenuInputs m_Wrapper;
        public MainScreenActions(@MainMenuInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_MainScreen_Navigate;
        public InputAction @Select => m_Wrapper.m_MainScreen_Select;
        public InputAction @ExitGame => m_Wrapper.m_MainScreen_ExitGame;
        public InputActionMap Get() { return m_Wrapper.m_MainScreen; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainScreenActions set) { return set.Get(); }
        public void SetCallbacks(IMainScreenActions instance)
        {
            if (m_Wrapper.m_MainScreenActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_MainScreenActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_MainScreenActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_MainScreenActionsCallbackInterface.OnNavigate;
                @Select.started -= m_Wrapper.m_MainScreenActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_MainScreenActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_MainScreenActionsCallbackInterface.OnSelect;
                @ExitGame.started -= m_Wrapper.m_MainScreenActionsCallbackInterface.OnExitGame;
                @ExitGame.performed -= m_Wrapper.m_MainScreenActionsCallbackInterface.OnExitGame;
                @ExitGame.canceled -= m_Wrapper.m_MainScreenActionsCallbackInterface.OnExitGame;
            }
            m_Wrapper.m_MainScreenActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @ExitGame.started += instance.OnExitGame;
                @ExitGame.performed += instance.OnExitGame;
                @ExitGame.canceled += instance.OnExitGame;
            }
        }
    }
    public MainScreenActions @MainScreen => new MainScreenActions(this);

    // Settings Screen
    private readonly InputActionMap m_SettingsScreen;
    private ISettingsScreenActions m_SettingsScreenActionsCallbackInterface;
    private readonly InputAction m_SettingsScreen_NavigateSettingsSubsections;
    private readonly InputAction m_SettingsScreen_Navigate;
    private readonly InputAction m_SettingsScreen_ChangeSettingValue;
    private readonly InputAction m_SettingsScreen_SaveSettings;
    private readonly InputAction m_SettingsScreen_Return;
    public struct SettingsScreenActions
    {
        private @MainMenuInputs m_Wrapper;
        public SettingsScreenActions(@MainMenuInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @NavigateSettingsSubsections => m_Wrapper.m_SettingsScreen_NavigateSettingsSubsections;
        public InputAction @Navigate => m_Wrapper.m_SettingsScreen_Navigate;
        public InputAction @ChangeSettingValue => m_Wrapper.m_SettingsScreen_ChangeSettingValue;
        public InputAction @SaveSettings => m_Wrapper.m_SettingsScreen_SaveSettings;
        public InputAction @Return => m_Wrapper.m_SettingsScreen_Return;
        public InputActionMap Get() { return m_Wrapper.m_SettingsScreen; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SettingsScreenActions set) { return set.Get(); }
        public void SetCallbacks(ISettingsScreenActions instance)
        {
            if (m_Wrapper.m_SettingsScreenActionsCallbackInterface != null)
            {
                @NavigateSettingsSubsections.started -= m_Wrapper.m_SettingsScreenActionsCallbackInterface.OnNavigateSettingsSubsections;
                @NavigateSettingsSubsections.performed -= m_Wrapper.m_SettingsScreenActionsCallbackInterface.OnNavigateSettingsSubsections;
                @NavigateSettingsSubsections.canceled -= m_Wrapper.m_SettingsScreenActionsCallbackInterface.OnNavigateSettingsSubsections;
                @Navigate.started -= m_Wrapper.m_SettingsScreenActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_SettingsScreenActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_SettingsScreenActionsCallbackInterface.OnNavigate;
                @ChangeSettingValue.started -= m_Wrapper.m_SettingsScreenActionsCallbackInterface.OnChangeSettingValue;
                @ChangeSettingValue.performed -= m_Wrapper.m_SettingsScreenActionsCallbackInterface.OnChangeSettingValue;
                @ChangeSettingValue.canceled -= m_Wrapper.m_SettingsScreenActionsCallbackInterface.OnChangeSettingValue;
                @SaveSettings.started -= m_Wrapper.m_SettingsScreenActionsCallbackInterface.OnSaveSettings;
                @SaveSettings.performed -= m_Wrapper.m_SettingsScreenActionsCallbackInterface.OnSaveSettings;
                @SaveSettings.canceled -= m_Wrapper.m_SettingsScreenActionsCallbackInterface.OnSaveSettings;
                @Return.started -= m_Wrapper.m_SettingsScreenActionsCallbackInterface.OnReturn;
                @Return.performed -= m_Wrapper.m_SettingsScreenActionsCallbackInterface.OnReturn;
                @Return.canceled -= m_Wrapper.m_SettingsScreenActionsCallbackInterface.OnReturn;
            }
            m_Wrapper.m_SettingsScreenActionsCallbackInterface = instance;
            if (instance != null)
            {
                @NavigateSettingsSubsections.started += instance.OnNavigateSettingsSubsections;
                @NavigateSettingsSubsections.performed += instance.OnNavigateSettingsSubsections;
                @NavigateSettingsSubsections.canceled += instance.OnNavigateSettingsSubsections;
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @ChangeSettingValue.started += instance.OnChangeSettingValue;
                @ChangeSettingValue.performed += instance.OnChangeSettingValue;
                @ChangeSettingValue.canceled += instance.OnChangeSettingValue;
                @SaveSettings.started += instance.OnSaveSettings;
                @SaveSettings.performed += instance.OnSaveSettings;
                @SaveSettings.canceled += instance.OnSaveSettings;
                @Return.started += instance.OnReturn;
                @Return.performed += instance.OnReturn;
                @Return.canceled += instance.OnReturn;
            }
        }
    }
    public SettingsScreenActions @SettingsScreen => new SettingsScreenActions(this);

    // Settings Screen (Graphics)
    private readonly InputActionMap m_SettingsScreenGraphics;
    private ISettingsScreenGraphicsActions m_SettingsScreenGraphicsActionsCallbackInterface;
    private readonly InputAction m_SettingsScreenGraphics_Newaction;
    public struct SettingsScreenGraphicsActions
    {
        private @MainMenuInputs m_Wrapper;
        public SettingsScreenGraphicsActions(@MainMenuInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_SettingsScreenGraphics_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_SettingsScreenGraphics; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SettingsScreenGraphicsActions set) { return set.Get(); }
        public void SetCallbacks(ISettingsScreenGraphicsActions instance)
        {
            if (m_Wrapper.m_SettingsScreenGraphicsActionsCallbackInterface != null)
            {
                @Newaction.started -= m_Wrapper.m_SettingsScreenGraphicsActionsCallbackInterface.OnNewaction;
                @Newaction.performed -= m_Wrapper.m_SettingsScreenGraphicsActionsCallbackInterface.OnNewaction;
                @Newaction.canceled -= m_Wrapper.m_SettingsScreenGraphicsActionsCallbackInterface.OnNewaction;
            }
            m_Wrapper.m_SettingsScreenGraphicsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Newaction.started += instance.OnNewaction;
                @Newaction.performed += instance.OnNewaction;
                @Newaction.canceled += instance.OnNewaction;
            }
        }
    }
    public SettingsScreenGraphicsActions @SettingsScreenGraphics => new SettingsScreenGraphicsActions(this);

    // Settings Screen (Sounds)
    private readonly InputActionMap m_SettingsScreenSounds;
    private ISettingsScreenSoundsActions m_SettingsScreenSoundsActionsCallbackInterface;
    private readonly InputAction m_SettingsScreenSounds_Newaction;
    public struct SettingsScreenSoundsActions
    {
        private @MainMenuInputs m_Wrapper;
        public SettingsScreenSoundsActions(@MainMenuInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_SettingsScreenSounds_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_SettingsScreenSounds; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SettingsScreenSoundsActions set) { return set.Get(); }
        public void SetCallbacks(ISettingsScreenSoundsActions instance)
        {
            if (m_Wrapper.m_SettingsScreenSoundsActionsCallbackInterface != null)
            {
                @Newaction.started -= m_Wrapper.m_SettingsScreenSoundsActionsCallbackInterface.OnNewaction;
                @Newaction.performed -= m_Wrapper.m_SettingsScreenSoundsActionsCallbackInterface.OnNewaction;
                @Newaction.canceled -= m_Wrapper.m_SettingsScreenSoundsActionsCallbackInterface.OnNewaction;
            }
            m_Wrapper.m_SettingsScreenSoundsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Newaction.started += instance.OnNewaction;
                @Newaction.performed += instance.OnNewaction;
                @Newaction.canceled += instance.OnNewaction;
            }
        }
    }
    public SettingsScreenSoundsActions @SettingsScreenSounds => new SettingsScreenSoundsActions(this);

    // Settings Screen (Controls)
    private readonly InputActionMap m_SettingsScreenControls;
    private ISettingsScreenControlsActions m_SettingsScreenControlsActionsCallbackInterface;
    private readonly InputAction m_SettingsScreenControls_Newaction;
    public struct SettingsScreenControlsActions
    {
        private @MainMenuInputs m_Wrapper;
        public SettingsScreenControlsActions(@MainMenuInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_SettingsScreenControls_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_SettingsScreenControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SettingsScreenControlsActions set) { return set.Get(); }
        public void SetCallbacks(ISettingsScreenControlsActions instance)
        {
            if (m_Wrapper.m_SettingsScreenControlsActionsCallbackInterface != null)
            {
                @Newaction.started -= m_Wrapper.m_SettingsScreenControlsActionsCallbackInterface.OnNewaction;
                @Newaction.performed -= m_Wrapper.m_SettingsScreenControlsActionsCallbackInterface.OnNewaction;
                @Newaction.canceled -= m_Wrapper.m_SettingsScreenControlsActionsCallbackInterface.OnNewaction;
            }
            m_Wrapper.m_SettingsScreenControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Newaction.started += instance.OnNewaction;
                @Newaction.performed += instance.OnNewaction;
                @Newaction.canceled += instance.OnNewaction;
            }
        }
    }
    public SettingsScreenControlsActions @SettingsScreenControls => new SettingsScreenControlsActions(this);

    // Credits Screen
    private readonly InputActionMap m_CreditsScreen;
    private ICreditsScreenActions m_CreditsScreenActionsCallbackInterface;
    private readonly InputAction m_CreditsScreen_Return;
    public struct CreditsScreenActions
    {
        private @MainMenuInputs m_Wrapper;
        public CreditsScreenActions(@MainMenuInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Return => m_Wrapper.m_CreditsScreen_Return;
        public InputActionMap Get() { return m_Wrapper.m_CreditsScreen; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CreditsScreenActions set) { return set.Get(); }
        public void SetCallbacks(ICreditsScreenActions instance)
        {
            if (m_Wrapper.m_CreditsScreenActionsCallbackInterface != null)
            {
                @Return.started -= m_Wrapper.m_CreditsScreenActionsCallbackInterface.OnReturn;
                @Return.performed -= m_Wrapper.m_CreditsScreenActionsCallbackInterface.OnReturn;
                @Return.canceled -= m_Wrapper.m_CreditsScreenActionsCallbackInterface.OnReturn;
            }
            m_Wrapper.m_CreditsScreenActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Return.started += instance.OnReturn;
                @Return.performed += instance.OnReturn;
                @Return.canceled += instance.OnReturn;
            }
        }
    }
    public CreditsScreenActions @CreditsScreen => new CreditsScreenActions(this);

    // Warning Window
    private readonly InputActionMap m_WarningWindow;
    private IWarningWindowActions m_WarningWindowActionsCallbackInterface;
    private readonly InputAction m_WarningWindow_Confirm;
    private readonly InputAction m_WarningWindow_Return;
    public struct WarningWindowActions
    {
        private @MainMenuInputs m_Wrapper;
        public WarningWindowActions(@MainMenuInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Confirm => m_Wrapper.m_WarningWindow_Confirm;
        public InputAction @Return => m_Wrapper.m_WarningWindow_Return;
        public InputActionMap Get() { return m_Wrapper.m_WarningWindow; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WarningWindowActions set) { return set.Get(); }
        public void SetCallbacks(IWarningWindowActions instance)
        {
            if (m_Wrapper.m_WarningWindowActionsCallbackInterface != null)
            {
                @Confirm.started -= m_Wrapper.m_WarningWindowActionsCallbackInterface.OnConfirm;
                @Confirm.performed -= m_Wrapper.m_WarningWindowActionsCallbackInterface.OnConfirm;
                @Confirm.canceled -= m_Wrapper.m_WarningWindowActionsCallbackInterface.OnConfirm;
                @Return.started -= m_Wrapper.m_WarningWindowActionsCallbackInterface.OnReturn;
                @Return.performed -= m_Wrapper.m_WarningWindowActionsCallbackInterface.OnReturn;
                @Return.canceled -= m_Wrapper.m_WarningWindowActionsCallbackInterface.OnReturn;
            }
            m_Wrapper.m_WarningWindowActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Confirm.started += instance.OnConfirm;
                @Confirm.performed += instance.OnConfirm;
                @Confirm.canceled += instance.OnConfirm;
                @Return.started += instance.OnReturn;
                @Return.performed += instance.OnReturn;
                @Return.canceled += instance.OnReturn;
            }
        }
    }
    public WarningWindowActions @WarningWindow => new WarningWindowActions(this);
    private int m_MouseKeyboardSchemeIndex = -1;
    public InputControlScheme MouseKeyboardScheme
    {
        get
        {
            if (m_MouseKeyboardSchemeIndex == -1) m_MouseKeyboardSchemeIndex = asset.FindControlSchemeIndex("MouseKeyboard");
            return asset.controlSchemes[m_MouseKeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IMainScreenActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnExitGame(InputAction.CallbackContext context);
    }
    public interface ISettingsScreenActions
    {
        void OnNavigateSettingsSubsections(InputAction.CallbackContext context);
        void OnNavigate(InputAction.CallbackContext context);
        void OnChangeSettingValue(InputAction.CallbackContext context);
        void OnSaveSettings(InputAction.CallbackContext context);
        void OnReturn(InputAction.CallbackContext context);
    }
    public interface ISettingsScreenGraphicsActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
    public interface ISettingsScreenSoundsActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
    public interface ISettingsScreenControlsActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
    public interface ICreditsScreenActions
    {
        void OnReturn(InputAction.CallbackContext context);
    }
    public interface IWarningWindowActions
    {
        void OnConfirm(InputAction.CallbackContext context);
        void OnReturn(InputAction.CallbackContext context);
    }
}
