//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input System/Legacy/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""4c6a56dc-eb8a-4e9b-bf9e-0e6aac5b0932"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""69578998-e099-40a4-837a-366f15796312"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Open Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""1b3d6680-6033-4225-bbea-dbef701463b2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pick Item"",
                    ""type"": ""Button"",
                    ""id"": ""b885ffcf-dd96-4522-9774-f98450e21968"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""9cab0dd7-35bd-4c3a-8696-1ef2e416e28b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Open Craft Section"",
                    ""type"": ""Button"",
                    ""id"": ""0813a88f-7526-407f-aad9-5398edca1711"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""c01ed6eb-7711-40dd-93e5-8794fb9a2be4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7e0e590e-0d7c-4b2a-a382-b83432c716e8"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""aa2664ed-5b11-4dfc-8158-14510b668e24"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""31f489a4-6319-4e4c-b491-53d1d3390f2e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""03ff97e0-180c-4bd6-8c91-d45680c3b2af"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a743cf6f-834b-4de9-9caf-2a7debe6c451"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b528381-0f54-4f61-a870-b5f527412cdd"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Open Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c17193fd-de43-4bb3-84e0-d9ee704b7ed8"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Open Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e701dd75-2434-407a-b621-c2905eca07bf"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Pick Item"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d65a873e-17d0-4880-883d-08ba549cb7ef"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pick Item"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5236a51c-808c-4bb9-a8a8-2de9b356caa6"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55a20f78-211b-4a6f-9cd6-95c65318ecfa"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07180d12-bd39-4e7a-af6f-b38de2f19234"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Open Craft Section"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI (Inventory)"",
            ""id"": ""c9576aff-f2bd-4d6f-bd7a-05d7ef0c932a"",
            ""actions"": [
                {
                    ""name"": ""Close Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""de86bae8-783e-47d2-ba0f-91b5ed5609ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""17335513-6661-4695-8965-66e3d666e1f1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""0b42933c-044a-44a4-9a37-446591999519"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""d4af47cc-0adb-43f0-9dce-12db3455564d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""055e9982-7158-4467-893f-23890f5efdeb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2c3c92fb-0b4b-45f3-a6b2-4a2eaff7a90b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f271c3d4-de2e-4075-8579-7933e0f208ed"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c5c922bf-9a71-4a18-851b-c82dc95588fd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""dc6a3cdf-51bc-4523-a4f3-adf2f6a7286d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Press Item Cell"",
                    ""type"": ""Button"",
                    ""id"": ""1130f7cc-566f-4903-b102-7f276c57fa2d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Start Moving Item Cell"",
                    ""type"": ""Button"",
                    ""id"": ""10458ec1-6a85-42bf-99ab-25d6a687132c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""84dffdcc-0e46-4a09-9ea7-531e20452cd3"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Close Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7fc414f-d7a6-45c8-bc02-206630a69083"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Close Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e733f053-acea-4387-b977-0e728b5c90b8"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Close Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""410ac864-44fc-4cac-9af8-f2ef914c1c23"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""91ea6f48-bfcf-4218-a0ef-217e0caa4134"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9bcbe9e6-1a47-4f94-9a3c-be79304b251b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f10859de-d31b-4bcb-ba17-40325c871ff6"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""df035a53-cb90-49d4-8996-5e02670f0cfb"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""777f5aa5-8dfd-409c-815a-c98d955eac43"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""66e9eda1-bbbd-464a-83a2-52597997605b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""195d764a-6e7a-456e-b1dc-4977c57db2d0"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ba89258a-d6c2-42cb-a22c-8c405b7aa173"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9a87c6e9-25b7-4859-a70d-366d27c4fb0e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1cf3a4d3-554a-49fb-b158-b382e5b6943d"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52dc0c30-18b4-4261-9a51-5b7244b8ec92"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""560ee374-d02f-4619-ad8a-247b67c6ebf0"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac86029c-7d3c-472b-9ce6-fda7d0bdce45"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""000ced06-323e-4595-ac91-9e0366fce6d8"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8afa488-b950-439e-ba6f-a59cbcb1b59a"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b915d43-17d1-4a43-b459-41fe6add065a"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3871b967-77ce-4600-bfd4-97da22119246"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Press Item Cell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95b48a67-47bb-4821-bc3f-6b49d53d67ed"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Press Item Cell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa2cdc77-f64c-44e2-a5dc-e332dfdb83ef"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start Moving Item Cell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bbc18126-dbfe-4db6-b589-237a0351db35"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start Moving Item Cell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI (Items Container)"",
            ""id"": ""631f22da-b951-41ed-9af5-b46b6d2b94d9"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""193c7d2e-4b36-4a42-bffe-f69b50ab8f7f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Take"",
                    ""type"": ""Button"",
                    ""id"": ""b07172ee-c5b7-429d-b981-83b16f50e20d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Take All"",
                    ""type"": ""Button"",
                    ""id"": ""8cbd904d-86fd-457d-a6a6-412bc88963af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Close Container"",
                    ""type"": ""Button"",
                    ""id"": ""8dc4c332-3aad-4532-998e-04f0fb3a16b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fdebd145-03a3-476c-bb94-330aed4fcd79"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Take"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4120417a-71e4-4406-85d8-18b0df892582"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Take"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc83de68-dd33-4118-88ec-8da8e6f3ca17"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Take All"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24d7f6a8-282d-4f9f-bdcf-dd70b8ec1527"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Take All"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36f78316-99a5-4737-80b1-56e055d52dad"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Close Container"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""158b530a-c67b-4c18-a32d-3a6b6e825b07"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Close Container"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""ca3aaf1a-2a8d-42d8-83f3-8eaaef3fd6a3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""15a6d30c-8eea-4bf8-adac-eb884eeac769"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4b3e7845-fa5f-4f1f-8387-b077d68bcc7b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9ec7e06f-dbed-4425-b854-a5b862bf91c7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""bbc062b1-7919-4e3e-a076-7d513bc75472"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""06cdcae6-87ad-472d-8e25-769a809f0129"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI (Item Cell Actions Menu)"",
            ""id"": ""9773b5b9-af57-4375-95d2-9cff867ac20c"",
            ""actions"": [
                {
                    ""name"": ""Quit Item Cell Actions Menu"",
                    ""type"": ""Button"",
                    ""id"": ""8da6e4de-eb34-4e15-9434-ad6f2c6aab82"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ce71be35-07c5-4d2e-b75f-8a309fd64f1f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Press"",
                    ""type"": ""Button"",
                    ""id"": ""e8528c02-fdcc-41a5-8098-6b2f0ed6ca86"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3c611462-f872-4368-ba09-bec66a9cff6d"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Mouse and Keyboard"",
                    ""action"": ""Quit Item Cell Actions Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dfc3f7f5-1736-4b56-8693-65f0032af90b"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Quit Item Cell Actions Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""ddbc1307-465a-468b-8b20-86cb89282fb3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""df1ba214-165b-44ba-a133-3dbd160d7974"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b0d10349-9a33-437c-83ac-7ac161e49200"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""26d48f43-978d-48a5-ac6b-3f444193df9a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""537f7364-d9b5-487b-9f26-776abdaf18ab"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4f309fa0-3d6a-4587-a784-b0cf54e9eb4b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""817ea463-6b00-47e0-9d92-4e2f6384fe7b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5928b75f-82da-4b07-b627-a923af136a8d"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI (Item Cell Moving)"",
            ""id"": ""ec8c96d9-7cc2-43fd-ae9a-3d35f9d6a07a"",
            ""actions"": [
                {
                    ""name"": ""Move Cell"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9ad4e257-e22c-4baa-ac9a-60605fc3cd4c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Put Cell Down"",
                    ""type"": ""Button"",
                    ""id"": ""e6a6bfaf-d42e-4d7b-8185-646f7ae87638"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e460524a-4388-4921-b02e-1623acba8527"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Cell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""85f42a1f-5d5f-4d97-88dc-2f4bcc62c782"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Cell"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d5a6c2e9-acc1-4b83-badc-272fafc91c33"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Cell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""26876f83-ca15-4ac4-9995-e0e22f93846b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Cell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""89db6813-2412-4cc3-a32a-50c2a2cdd00e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Cell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""55e25153-5f36-4f0e-a65b-8f3637b0ac15"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move Cell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""600bd4b4-9506-4e47-81b9-9ff5ffa61543"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Put Cell Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a94f5572-1319-40cd-8baf-1ddba7462f31"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Put Cell Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI (Choose Items Count Panel)"",
            ""id"": ""26076924-9c9c-487c-b204-e0b8277817ea"",
            ""actions"": [
                {
                    ""name"": ""Split Items Up"",
                    ""type"": ""Button"",
                    ""id"": ""2a699554-ed3f-43e0-a9e5-11a26fad23df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Change Items Count"",
                    ""type"": ""PassThrough"",
                    ""id"": ""080e0861-f8a3-48e3-98d3-ad7e0a11c0e9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Close Panel"",
                    ""type"": ""Button"",
                    ""id"": ""81a7d3f5-280a-4899-af47-8db0d8da691a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b5a21bc8-ae3b-494e-9ac1-cd3cda15504e"",
                    ""path"": ""<Keyboard>/end"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Split Items Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af4c81bf-70a3-49ac-82f0-6095e1fc882d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Split Items Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7eba23fa-c26f-46cc-86f9-7a6ab750ffe8"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Split Items Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""AD"",
                    ""id"": ""a2f246d0-dce4-46ab-a5bd-9ab078c98ec5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Items Count"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d28e9275-2f14-4f1c-aa2b-4e8713b2f8bd"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Items Count"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d0c7081d-4d4d-43ca-a138-2f38918768d8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Items Count"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""D-Pad"",
                    ""id"": ""914b979c-8463-4da1-ab1e-610d6d77fa5f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Items Count"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2de1d380-20c7-45bf-9a90-87bde3338700"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Items Count"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""134cd829-0f9f-42e4-9ef9-8bee3e387fea"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Change Items Count"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""68766064-ba07-4915-bca5-2ef05a9af8a2"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close Panel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""812bc055-4168-4e40-8489-9004da1cf62a"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close Panel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI (Craft Section (Recipes))"",
            ""id"": ""f952f80f-b40d-4447-8afb-a80bdb2f2129"",
            ""actions"": [
                {
                    ""name"": ""Close Section"",
                    ""type"": ""Button"",
                    ""id"": ""27edfeef-29b2-448c-b88f-4dcf8bf1862c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""2ac25e00-3eda-425a-a05b-d20f5b0466fb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""b3e27708-a895-4585-81b6-e86cd2333a94"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""262d743c-61b0-4cc9-ad3b-163000d3a89b"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close Section"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2153e04-e26c-4d28-8875-c0a6a19810db"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close Section"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""e0df42c2-0ac9-4462-9e5b-ff5b3ca418f8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9560229d-bf8e-4753-97ba-7aa880c46c62"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""46b0c3ce-6aa7-4792-b2d1-3b1078de2b5b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""46987a3c-476a-4a0d-b535-c1326a2ebe7b"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""77a79c28-158e-4478-985f-5b0d6709a8fb"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7fecfa74-af60-494f-a9c8-8e9c33e81dda"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44afc09b-ff7d-41fc-b114-924c62a10a0d"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": ""Press(pressPoint=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd7268e0-c1f1-4d1d-9109-b2e1784dd836"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d73a7420-1bcb-4c70-863d-5259dfadd913"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Mouse and Keyboard"",
            ""bindingGroup"": ""Mouse and Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_OpenInventory = m_Player.FindAction("Open Inventory", throwIfNotFound: true);
        m_Player_PickItem = m_Player.FindAction("Pick Item", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_OpenCraftSection = m_Player.FindAction("Open Craft Section", throwIfNotFound: true);
        // UI (Inventory)
        m_UIInventory = asset.FindActionMap("UI (Inventory)", throwIfNotFound: true);
        m_UIInventory_CloseInventory = m_UIInventory.FindAction("Close Inventory", throwIfNotFound: true);
        m_UIInventory_Navigate = m_UIInventory.FindAction("Navigate", throwIfNotFound: true);
        m_UIInventory_Submit = m_UIInventory.FindAction("Submit", throwIfNotFound: true);
        m_UIInventory_Cancel = m_UIInventory.FindAction("Cancel", throwIfNotFound: true);
        m_UIInventory_Point = m_UIInventory.FindAction("Point", throwIfNotFound: true);
        m_UIInventory_Click = m_UIInventory.FindAction("Click", throwIfNotFound: true);
        m_UIInventory_ScrollWheel = m_UIInventory.FindAction("ScrollWheel", throwIfNotFound: true);
        m_UIInventory_MiddleClick = m_UIInventory.FindAction("MiddleClick", throwIfNotFound: true);
        m_UIInventory_RightClick = m_UIInventory.FindAction("RightClick", throwIfNotFound: true);
        m_UIInventory_PressItemCell = m_UIInventory.FindAction("Press Item Cell", throwIfNotFound: true);
        m_UIInventory_StartMovingItemCell = m_UIInventory.FindAction("Start Moving Item Cell", throwIfNotFound: true);
        // UI (Items Container)
        m_UIItemsContainer = asset.FindActionMap("UI (Items Container)", throwIfNotFound: true);
        m_UIItemsContainer_Navigate = m_UIItemsContainer.FindAction("Navigate", throwIfNotFound: true);
        m_UIItemsContainer_Take = m_UIItemsContainer.FindAction("Take", throwIfNotFound: true);
        m_UIItemsContainer_TakeAll = m_UIItemsContainer.FindAction("Take All", throwIfNotFound: true);
        m_UIItemsContainer_CloseContainer = m_UIItemsContainer.FindAction("Close Container", throwIfNotFound: true);
        // UI (Item Cell Actions Menu)
        m_UIItemCellActionsMenu = asset.FindActionMap("UI (Item Cell Actions Menu)", throwIfNotFound: true);
        m_UIItemCellActionsMenu_QuitItemCellActionsMenu = m_UIItemCellActionsMenu.FindAction("Quit Item Cell Actions Menu", throwIfNotFound: true);
        m_UIItemCellActionsMenu_Navigate = m_UIItemCellActionsMenu.FindAction("Navigate", throwIfNotFound: true);
        m_UIItemCellActionsMenu_Press = m_UIItemCellActionsMenu.FindAction("Press", throwIfNotFound: true);
        // UI (Item Cell Moving)
        m_UIItemCellMoving = asset.FindActionMap("UI (Item Cell Moving)", throwIfNotFound: true);
        m_UIItemCellMoving_MoveCell = m_UIItemCellMoving.FindAction("Move Cell", throwIfNotFound: true);
        m_UIItemCellMoving_PutCellDown = m_UIItemCellMoving.FindAction("Put Cell Down", throwIfNotFound: true);
        // UI (Choose Items Count Panel)
        m_UIChooseItemsCountPanel = asset.FindActionMap("UI (Choose Items Count Panel)", throwIfNotFound: true);
        m_UIChooseItemsCountPanel_SplitItemsUp = m_UIChooseItemsCountPanel.FindAction("Split Items Up", throwIfNotFound: true);
        m_UIChooseItemsCountPanel_ChangeItemsCount = m_UIChooseItemsCountPanel.FindAction("Change Items Count", throwIfNotFound: true);
        m_UIChooseItemsCountPanel_ClosePanel = m_UIChooseItemsCountPanel.FindAction("Close Panel", throwIfNotFound: true);
        // UI (Craft Section (Recipes))
        m_UICraftSectionRecipes = asset.FindActionMap("UI (Craft Section (Recipes))", throwIfNotFound: true);
        m_UICraftSectionRecipes_CloseSection = m_UICraftSectionRecipes.FindAction("Close Section", throwIfNotFound: true);
        m_UICraftSectionRecipes_Navigate = m_UICraftSectionRecipes.FindAction("Navigate", throwIfNotFound: true);
        m_UICraftSectionRecipes_Select = m_UICraftSectionRecipes.FindAction("Select", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_OpenInventory;
    private readonly InputAction m_Player_PickItem;
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_OpenCraftSection;
    public struct PlayerActions
    {
        private @InputActions m_Wrapper;
        public PlayerActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @OpenInventory => m_Wrapper.m_Player_OpenInventory;
        public InputAction @PickItem => m_Wrapper.m_Player_PickItem;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @OpenCraftSection => m_Wrapper.m_Player_OpenCraftSection;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @OpenInventory.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenInventory;
                @OpenInventory.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenInventory;
                @PickItem.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPickItem;
                @PickItem.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPickItem;
                @PickItem.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPickItem;
                @Interact.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @OpenCraftSection.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenCraftSection;
                @OpenCraftSection.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenCraftSection;
                @OpenCraftSection.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenCraftSection;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @OpenInventory.started += instance.OnOpenInventory;
                @OpenInventory.performed += instance.OnOpenInventory;
                @OpenInventory.canceled += instance.OnOpenInventory;
                @PickItem.started += instance.OnPickItem;
                @PickItem.performed += instance.OnPickItem;
                @PickItem.canceled += instance.OnPickItem;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @OpenCraftSection.started += instance.OnOpenCraftSection;
                @OpenCraftSection.performed += instance.OnOpenCraftSection;
                @OpenCraftSection.canceled += instance.OnOpenCraftSection;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI (Inventory)
    private readonly InputActionMap m_UIInventory;
    private IUIInventoryActions m_UIInventoryActionsCallbackInterface;
    private readonly InputAction m_UIInventory_CloseInventory;
    private readonly InputAction m_UIInventory_Navigate;
    private readonly InputAction m_UIInventory_Submit;
    private readonly InputAction m_UIInventory_Cancel;
    private readonly InputAction m_UIInventory_Point;
    private readonly InputAction m_UIInventory_Click;
    private readonly InputAction m_UIInventory_ScrollWheel;
    private readonly InputAction m_UIInventory_MiddleClick;
    private readonly InputAction m_UIInventory_RightClick;
    private readonly InputAction m_UIInventory_PressItemCell;
    private readonly InputAction m_UIInventory_StartMovingItemCell;
    public struct UIInventoryActions
    {
        private @InputActions m_Wrapper;
        public UIInventoryActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @CloseInventory => m_Wrapper.m_UIInventory_CloseInventory;
        public InputAction @Navigate => m_Wrapper.m_UIInventory_Navigate;
        public InputAction @Submit => m_Wrapper.m_UIInventory_Submit;
        public InputAction @Cancel => m_Wrapper.m_UIInventory_Cancel;
        public InputAction @Point => m_Wrapper.m_UIInventory_Point;
        public InputAction @Click => m_Wrapper.m_UIInventory_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_UIInventory_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_UIInventory_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_UIInventory_RightClick;
        public InputAction @PressItemCell => m_Wrapper.m_UIInventory_PressItemCell;
        public InputAction @StartMovingItemCell => m_Wrapper.m_UIInventory_StartMovingItemCell;
        public InputActionMap Get() { return m_Wrapper.m_UIInventory; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIInventoryActions set) { return set.Get(); }
        public void SetCallbacks(IUIInventoryActions instance)
        {
            if (m_Wrapper.m_UIInventoryActionsCallbackInterface != null)
            {
                @CloseInventory.started -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnCloseInventory;
                @CloseInventory.performed -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnCloseInventory;
                @CloseInventory.canceled -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnCloseInventory;
                @Navigate.started -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnNavigate;
                @Submit.started -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnSubmit;
                @Cancel.started -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnCancel;
                @Point.started -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnPoint;
                @Point.performed -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnPoint;
                @Point.canceled -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnPoint;
                @Click.started -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnClick;
                @ScrollWheel.started -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.performed -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.canceled -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnScrollWheel;
                @MiddleClick.started -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.performed -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.canceled -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnMiddleClick;
                @RightClick.started -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnRightClick;
                @PressItemCell.started -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnPressItemCell;
                @PressItemCell.performed -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnPressItemCell;
                @PressItemCell.canceled -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnPressItemCell;
                @StartMovingItemCell.started -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnStartMovingItemCell;
                @StartMovingItemCell.performed -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnStartMovingItemCell;
                @StartMovingItemCell.canceled -= m_Wrapper.m_UIInventoryActionsCallbackInterface.OnStartMovingItemCell;
            }
            m_Wrapper.m_UIInventoryActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CloseInventory.started += instance.OnCloseInventory;
                @CloseInventory.performed += instance.OnCloseInventory;
                @CloseInventory.canceled += instance.OnCloseInventory;
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Point.started += instance.OnPoint;
                @Point.performed += instance.OnPoint;
                @Point.canceled += instance.OnPoint;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @ScrollWheel.started += instance.OnScrollWheel;
                @ScrollWheel.performed += instance.OnScrollWheel;
                @ScrollWheel.canceled += instance.OnScrollWheel;
                @MiddleClick.started += instance.OnMiddleClick;
                @MiddleClick.performed += instance.OnMiddleClick;
                @MiddleClick.canceled += instance.OnMiddleClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @PressItemCell.started += instance.OnPressItemCell;
                @PressItemCell.performed += instance.OnPressItemCell;
                @PressItemCell.canceled += instance.OnPressItemCell;
                @StartMovingItemCell.started += instance.OnStartMovingItemCell;
                @StartMovingItemCell.performed += instance.OnStartMovingItemCell;
                @StartMovingItemCell.canceled += instance.OnStartMovingItemCell;
            }
        }
    }
    public UIInventoryActions @UIInventory => new UIInventoryActions(this);

    // UI (Items Container)
    private readonly InputActionMap m_UIItemsContainer;
    private IUIItemsContainerActions m_UIItemsContainerActionsCallbackInterface;
    private readonly InputAction m_UIItemsContainer_Navigate;
    private readonly InputAction m_UIItemsContainer_Take;
    private readonly InputAction m_UIItemsContainer_TakeAll;
    private readonly InputAction m_UIItemsContainer_CloseContainer;
    public struct UIItemsContainerActions
    {
        private @InputActions m_Wrapper;
        public UIItemsContainerActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_UIItemsContainer_Navigate;
        public InputAction @Take => m_Wrapper.m_UIItemsContainer_Take;
        public InputAction @TakeAll => m_Wrapper.m_UIItemsContainer_TakeAll;
        public InputAction @CloseContainer => m_Wrapper.m_UIItemsContainer_CloseContainer;
        public InputActionMap Get() { return m_Wrapper.m_UIItemsContainer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIItemsContainerActions set) { return set.Get(); }
        public void SetCallbacks(IUIItemsContainerActions instance)
        {
            if (m_Wrapper.m_UIItemsContainerActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_UIItemsContainerActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UIItemsContainerActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UIItemsContainerActionsCallbackInterface.OnNavigate;
                @Take.started -= m_Wrapper.m_UIItemsContainerActionsCallbackInterface.OnTake;
                @Take.performed -= m_Wrapper.m_UIItemsContainerActionsCallbackInterface.OnTake;
                @Take.canceled -= m_Wrapper.m_UIItemsContainerActionsCallbackInterface.OnTake;
                @TakeAll.started -= m_Wrapper.m_UIItemsContainerActionsCallbackInterface.OnTakeAll;
                @TakeAll.performed -= m_Wrapper.m_UIItemsContainerActionsCallbackInterface.OnTakeAll;
                @TakeAll.canceled -= m_Wrapper.m_UIItemsContainerActionsCallbackInterface.OnTakeAll;
                @CloseContainer.started -= m_Wrapper.m_UIItemsContainerActionsCallbackInterface.OnCloseContainer;
                @CloseContainer.performed -= m_Wrapper.m_UIItemsContainerActionsCallbackInterface.OnCloseContainer;
                @CloseContainer.canceled -= m_Wrapper.m_UIItemsContainerActionsCallbackInterface.OnCloseContainer;
            }
            m_Wrapper.m_UIItemsContainerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Take.started += instance.OnTake;
                @Take.performed += instance.OnTake;
                @Take.canceled += instance.OnTake;
                @TakeAll.started += instance.OnTakeAll;
                @TakeAll.performed += instance.OnTakeAll;
                @TakeAll.canceled += instance.OnTakeAll;
                @CloseContainer.started += instance.OnCloseContainer;
                @CloseContainer.performed += instance.OnCloseContainer;
                @CloseContainer.canceled += instance.OnCloseContainer;
            }
        }
    }
    public UIItemsContainerActions @UIItemsContainer => new UIItemsContainerActions(this);

    // UI (Item Cell Actions Menu)
    private readonly InputActionMap m_UIItemCellActionsMenu;
    private IUIItemCellActionsMenuActions m_UIItemCellActionsMenuActionsCallbackInterface;
    private readonly InputAction m_UIItemCellActionsMenu_QuitItemCellActionsMenu;
    private readonly InputAction m_UIItemCellActionsMenu_Navigate;
    private readonly InputAction m_UIItemCellActionsMenu_Press;
    public struct UIItemCellActionsMenuActions
    {
        private @InputActions m_Wrapper;
        public UIItemCellActionsMenuActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @QuitItemCellActionsMenu => m_Wrapper.m_UIItemCellActionsMenu_QuitItemCellActionsMenu;
        public InputAction @Navigate => m_Wrapper.m_UIItemCellActionsMenu_Navigate;
        public InputAction @Press => m_Wrapper.m_UIItemCellActionsMenu_Press;
        public InputActionMap Get() { return m_Wrapper.m_UIItemCellActionsMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIItemCellActionsMenuActions set) { return set.Get(); }
        public void SetCallbacks(IUIItemCellActionsMenuActions instance)
        {
            if (m_Wrapper.m_UIItemCellActionsMenuActionsCallbackInterface != null)
            {
                @QuitItemCellActionsMenu.started -= m_Wrapper.m_UIItemCellActionsMenuActionsCallbackInterface.OnQuitItemCellActionsMenu;
                @QuitItemCellActionsMenu.performed -= m_Wrapper.m_UIItemCellActionsMenuActionsCallbackInterface.OnQuitItemCellActionsMenu;
                @QuitItemCellActionsMenu.canceled -= m_Wrapper.m_UIItemCellActionsMenuActionsCallbackInterface.OnQuitItemCellActionsMenu;
                @Navigate.started -= m_Wrapper.m_UIItemCellActionsMenuActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UIItemCellActionsMenuActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UIItemCellActionsMenuActionsCallbackInterface.OnNavigate;
                @Press.started -= m_Wrapper.m_UIItemCellActionsMenuActionsCallbackInterface.OnPress;
                @Press.performed -= m_Wrapper.m_UIItemCellActionsMenuActionsCallbackInterface.OnPress;
                @Press.canceled -= m_Wrapper.m_UIItemCellActionsMenuActionsCallbackInterface.OnPress;
            }
            m_Wrapper.m_UIItemCellActionsMenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @QuitItemCellActionsMenu.started += instance.OnQuitItemCellActionsMenu;
                @QuitItemCellActionsMenu.performed += instance.OnQuitItemCellActionsMenu;
                @QuitItemCellActionsMenu.canceled += instance.OnQuitItemCellActionsMenu;
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Press.started += instance.OnPress;
                @Press.performed += instance.OnPress;
                @Press.canceled += instance.OnPress;
            }
        }
    }
    public UIItemCellActionsMenuActions @UIItemCellActionsMenu => new UIItemCellActionsMenuActions(this);

    // UI (Item Cell Moving)
    private readonly InputActionMap m_UIItemCellMoving;
    private IUIItemCellMovingActions m_UIItemCellMovingActionsCallbackInterface;
    private readonly InputAction m_UIItemCellMoving_MoveCell;
    private readonly InputAction m_UIItemCellMoving_PutCellDown;
    public struct UIItemCellMovingActions
    {
        private @InputActions m_Wrapper;
        public UIItemCellMovingActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveCell => m_Wrapper.m_UIItemCellMoving_MoveCell;
        public InputAction @PutCellDown => m_Wrapper.m_UIItemCellMoving_PutCellDown;
        public InputActionMap Get() { return m_Wrapper.m_UIItemCellMoving; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIItemCellMovingActions set) { return set.Get(); }
        public void SetCallbacks(IUIItemCellMovingActions instance)
        {
            if (m_Wrapper.m_UIItemCellMovingActionsCallbackInterface != null)
            {
                @MoveCell.started -= m_Wrapper.m_UIItemCellMovingActionsCallbackInterface.OnMoveCell;
                @MoveCell.performed -= m_Wrapper.m_UIItemCellMovingActionsCallbackInterface.OnMoveCell;
                @MoveCell.canceled -= m_Wrapper.m_UIItemCellMovingActionsCallbackInterface.OnMoveCell;
                @PutCellDown.started -= m_Wrapper.m_UIItemCellMovingActionsCallbackInterface.OnPutCellDown;
                @PutCellDown.performed -= m_Wrapper.m_UIItemCellMovingActionsCallbackInterface.OnPutCellDown;
                @PutCellDown.canceled -= m_Wrapper.m_UIItemCellMovingActionsCallbackInterface.OnPutCellDown;
            }
            m_Wrapper.m_UIItemCellMovingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveCell.started += instance.OnMoveCell;
                @MoveCell.performed += instance.OnMoveCell;
                @MoveCell.canceled += instance.OnMoveCell;
                @PutCellDown.started += instance.OnPutCellDown;
                @PutCellDown.performed += instance.OnPutCellDown;
                @PutCellDown.canceled += instance.OnPutCellDown;
            }
        }
    }
    public UIItemCellMovingActions @UIItemCellMoving => new UIItemCellMovingActions(this);

    // UI (Choose Items Count Panel)
    private readonly InputActionMap m_UIChooseItemsCountPanel;
    private IUIChooseItemsCountPanelActions m_UIChooseItemsCountPanelActionsCallbackInterface;
    private readonly InputAction m_UIChooseItemsCountPanel_SplitItemsUp;
    private readonly InputAction m_UIChooseItemsCountPanel_ChangeItemsCount;
    private readonly InputAction m_UIChooseItemsCountPanel_ClosePanel;
    public struct UIChooseItemsCountPanelActions
    {
        private @InputActions m_Wrapper;
        public UIChooseItemsCountPanelActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @SplitItemsUp => m_Wrapper.m_UIChooseItemsCountPanel_SplitItemsUp;
        public InputAction @ChangeItemsCount => m_Wrapper.m_UIChooseItemsCountPanel_ChangeItemsCount;
        public InputAction @ClosePanel => m_Wrapper.m_UIChooseItemsCountPanel_ClosePanel;
        public InputActionMap Get() { return m_Wrapper.m_UIChooseItemsCountPanel; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIChooseItemsCountPanelActions set) { return set.Get(); }
        public void SetCallbacks(IUIChooseItemsCountPanelActions instance)
        {
            if (m_Wrapper.m_UIChooseItemsCountPanelActionsCallbackInterface != null)
            {
                @SplitItemsUp.started -= m_Wrapper.m_UIChooseItemsCountPanelActionsCallbackInterface.OnSplitItemsUp;
                @SplitItemsUp.performed -= m_Wrapper.m_UIChooseItemsCountPanelActionsCallbackInterface.OnSplitItemsUp;
                @SplitItemsUp.canceled -= m_Wrapper.m_UIChooseItemsCountPanelActionsCallbackInterface.OnSplitItemsUp;
                @ChangeItemsCount.started -= m_Wrapper.m_UIChooseItemsCountPanelActionsCallbackInterface.OnChangeItemsCount;
                @ChangeItemsCount.performed -= m_Wrapper.m_UIChooseItemsCountPanelActionsCallbackInterface.OnChangeItemsCount;
                @ChangeItemsCount.canceled -= m_Wrapper.m_UIChooseItemsCountPanelActionsCallbackInterface.OnChangeItemsCount;
                @ClosePanel.started -= m_Wrapper.m_UIChooseItemsCountPanelActionsCallbackInterface.OnClosePanel;
                @ClosePanel.performed -= m_Wrapper.m_UIChooseItemsCountPanelActionsCallbackInterface.OnClosePanel;
                @ClosePanel.canceled -= m_Wrapper.m_UIChooseItemsCountPanelActionsCallbackInterface.OnClosePanel;
            }
            m_Wrapper.m_UIChooseItemsCountPanelActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SplitItemsUp.started += instance.OnSplitItemsUp;
                @SplitItemsUp.performed += instance.OnSplitItemsUp;
                @SplitItemsUp.canceled += instance.OnSplitItemsUp;
                @ChangeItemsCount.started += instance.OnChangeItemsCount;
                @ChangeItemsCount.performed += instance.OnChangeItemsCount;
                @ChangeItemsCount.canceled += instance.OnChangeItemsCount;
                @ClosePanel.started += instance.OnClosePanel;
                @ClosePanel.performed += instance.OnClosePanel;
                @ClosePanel.canceled += instance.OnClosePanel;
            }
        }
    }
    public UIChooseItemsCountPanelActions @UIChooseItemsCountPanel => new UIChooseItemsCountPanelActions(this);

    // UI (Craft Section (Recipes))
    private readonly InputActionMap m_UICraftSectionRecipes;
    private IUICraftSectionRecipesActions m_UICraftSectionRecipesActionsCallbackInterface;
    private readonly InputAction m_UICraftSectionRecipes_CloseSection;
    private readonly InputAction m_UICraftSectionRecipes_Navigate;
    private readonly InputAction m_UICraftSectionRecipes_Select;
    public struct UICraftSectionRecipesActions
    {
        private @InputActions m_Wrapper;
        public UICraftSectionRecipesActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @CloseSection => m_Wrapper.m_UICraftSectionRecipes_CloseSection;
        public InputAction @Navigate => m_Wrapper.m_UICraftSectionRecipes_Navigate;
        public InputAction @Select => m_Wrapper.m_UICraftSectionRecipes_Select;
        public InputActionMap Get() { return m_Wrapper.m_UICraftSectionRecipes; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UICraftSectionRecipesActions set) { return set.Get(); }
        public void SetCallbacks(IUICraftSectionRecipesActions instance)
        {
            if (m_Wrapper.m_UICraftSectionRecipesActionsCallbackInterface != null)
            {
                @CloseSection.started -= m_Wrapper.m_UICraftSectionRecipesActionsCallbackInterface.OnCloseSection;
                @CloseSection.performed -= m_Wrapper.m_UICraftSectionRecipesActionsCallbackInterface.OnCloseSection;
                @CloseSection.canceled -= m_Wrapper.m_UICraftSectionRecipesActionsCallbackInterface.OnCloseSection;
                @Navigate.started -= m_Wrapper.m_UICraftSectionRecipesActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UICraftSectionRecipesActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UICraftSectionRecipesActionsCallbackInterface.OnNavigate;
                @Select.started -= m_Wrapper.m_UICraftSectionRecipesActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_UICraftSectionRecipesActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_UICraftSectionRecipesActionsCallbackInterface.OnSelect;
            }
            m_Wrapper.m_UICraftSectionRecipesActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CloseSection.started += instance.OnCloseSection;
                @CloseSection.performed += instance.OnCloseSection;
                @CloseSection.canceled += instance.OnCloseSection;
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
            }
        }
    }
    public UICraftSectionRecipesActions @UICraftSectionRecipes => new UICraftSectionRecipesActions(this);
    private int m_MouseandKeyboardSchemeIndex = -1;
    public InputControlScheme MouseandKeyboardScheme
    {
        get
        {
            if (m_MouseandKeyboardSchemeIndex == -1) m_MouseandKeyboardSchemeIndex = asset.FindControlSchemeIndex("Mouse and Keyboard");
            return asset.controlSchemes[m_MouseandKeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnOpenInventory(InputAction.CallbackContext context);
        void OnPickItem(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnOpenCraftSection(InputAction.CallbackContext context);
    }
    public interface IUIInventoryActions
    {
        void OnCloseInventory(InputAction.CallbackContext context);
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnPressItemCell(InputAction.CallbackContext context);
        void OnStartMovingItemCell(InputAction.CallbackContext context);
    }
    public interface IUIItemsContainerActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnTake(InputAction.CallbackContext context);
        void OnTakeAll(InputAction.CallbackContext context);
        void OnCloseContainer(InputAction.CallbackContext context);
    }
    public interface IUIItemCellActionsMenuActions
    {
        void OnQuitItemCellActionsMenu(InputAction.CallbackContext context);
        void OnNavigate(InputAction.CallbackContext context);
        void OnPress(InputAction.CallbackContext context);
    }
    public interface IUIItemCellMovingActions
    {
        void OnMoveCell(InputAction.CallbackContext context);
        void OnPutCellDown(InputAction.CallbackContext context);
    }
    public interface IUIChooseItemsCountPanelActions
    {
        void OnSplitItemsUp(InputAction.CallbackContext context);
        void OnChangeItemsCount(InputAction.CallbackContext context);
        void OnClosePanel(InputAction.CallbackContext context);
    }
    public interface IUICraftSectionRecipesActions
    {
        void OnCloseSection(InputAction.CallbackContext context);
        void OnNavigate(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
    }
}
